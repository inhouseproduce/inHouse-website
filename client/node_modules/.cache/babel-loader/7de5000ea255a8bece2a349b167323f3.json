{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/Users/eduardjacobs/Desktop/files/inHouse-website/client/node_modules/echarts/lib/chart/pie/pieLayout.js"],"names":["_number","require","parsePercent","linearMap","labelLayout","zrUtil","PI2","Math","PI","RADIAN","_default","seriesType","ecModel","api","payload","eachSeriesByType","seriesModel","data","getData","valueDim","mapDimension","center","get","radius","isArray","width","getWidth","height","getHeight","size","min","cx","cy","r0","r","startAngle","minAngle","validDataCount","each","value","isNaN","sum","getSum","unitRadian","clockwise","roseType","stillShowZeroSum","extent","getDataExtent","restAngle","valueSumLargerThanMinAngle","currentAngle","dir","idx","angle","setItemLayout","NaN","endAngle","layout","getItemLayout","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}