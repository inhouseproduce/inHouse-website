{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < axes.length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/Users/eduardjacobs/Desktop/files/inHouse-website/client/node_modules/echarts/lib/chart/radar/radarLayout.js"],"names":["_default","ecModel","eachSeriesByType","seriesModel","data","getData","points","coordSys","coordinateSystem","pointsConverter","val","idx","i","dataToPoint","axes","getIndicatorAxes","length","each","mapDimension","dim","push","slice","setItemLayout","module","exports"],"mappings":"AACA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,QAAT,CAAkBC,OAAlB,EAA2B;AACzBA,EAAAA,OAAO,CAACC,gBAAR,CAAyB,OAAzB,EAAkC,UAAUC,WAAV,EAAuB;AACvD,QAAIC,IAAI,GAAGD,WAAW,CAACE,OAAZ,EAAX;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,QAAQ,GAAGJ,WAAW,CAACK,gBAA3B;;AAEA,QAAI,CAACD,QAAL,EAAe;AACb;AACD;;AAED,aAASE,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmC;AACjCL,MAAAA,MAAM,CAACK,GAAD,CAAN,GAAcL,MAAM,CAACK,GAAD,CAAN,IAAe,EAA7B;AACAL,MAAAA,MAAM,CAACK,GAAD,CAAN,CAAYC,CAAZ,IAAiBL,QAAQ,CAACM,WAAT,CAAqBH,GAArB,EAA0BE,CAA1B,CAAjB;AACD;;AAED,QAAIE,IAAI,GAAGP,QAAQ,CAACQ,gBAAT,EAAX;;AAEA,SAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,IAAI,CAACE,MAAzB,EAAiCJ,CAAC,EAAlC,EAAsC;AACpCR,MAAAA,IAAI,CAACa,IAAL,CAAUb,IAAI,CAACc,YAAL,CAAkBJ,IAAI,CAACF,CAAD,CAAJ,CAAQO,GAA1B,CAAV,EAA0CV,eAA1C;AACD;;AAEDL,IAAAA,IAAI,CAACa,IAAL,CAAU,UAAUN,GAAV,EAAe;AACvB;AACAL,MAAAA,MAAM,CAACK,GAAD,CAAN,CAAY,CAAZ,KAAkBL,MAAM,CAACK,GAAD,CAAN,CAAYS,IAAZ,CAAiBd,MAAM,CAACK,GAAD,CAAN,CAAY,CAAZ,EAAeU,KAAf,EAAjB,CAAlB;AACAjB,MAAAA,IAAI,CAACkB,aAAL,CAAmBX,GAAnB,EAAwBL,MAAM,CAACK,GAAD,CAA9B;AACD,KAJD;AAKD,GAzBD;AA0BD;;AAEDY,MAAM,CAACC,OAAP,GAAiBxB,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < axes.length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}