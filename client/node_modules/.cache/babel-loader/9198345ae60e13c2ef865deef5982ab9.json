{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar View = require(\"../../coord/View\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file This file used to draw tree view.\n * @author Deqing Li(annong035@gmail.com)\n */\n\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function init(ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    /**\n     * @private\n     * @type {module:echarts/componet/helper/RoamController}\n     */\n\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  },\n  render: function render(seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    this._updateViewCoordSys(seriesModel);\n\n    this._updateController(seriesModel, ecModel, api);\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // Update node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\n    this._updateNodeAndLinkScale(seriesModel);\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  _updateViewCoordSys: function _updateViewCoordSys(seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      max[0] += 1;\n      min[0] -= 1;\n    }\n\n    if (max[1] - min[1] === 0) {\n      max[1] += 1;\n      min[1] -= 1;\n    }\n\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'));\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      position: viewCoordSys.position,\n      scale: viewCoordSys.scale\n    });\n    this._viewCoordSys = viewCoordSys;\n  },\n  _updateController: function _updateController(seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }, this).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      this._updateNodeAndLinkScale(seriesModel);\n    }, this);\n  },\n  _updateNodeAndLinkScale: function _updateNodeAndLinkScale(seriesModel) {\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function _getNodeGlobalScale(seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  dispose: function dispose() {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  remove: function remove() {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0,\n          strokeNoScale: true\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n\n  if (seriesScope.layout === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/Users/eduardjacobs/Desktop/files/inHouse-website/client/node_modules/echarts/lib/chart/tree/TreeView.js"],"names":["zrUtil","require","graphic","SymbolClz","_layoutHelper","radialCoordinate","echarts","bbox","View","roamHelper","RoamController","_cursorHelper","onIrrelevantElement","_default","extendChartView","type","init","ecModel","api","_oldTree","_mainGroup","Group","_controller","getZr","_controllerHost","target","group","add","render","seriesModel","payload","data","getData","layoutInfo","layout","get","attr","x","width","y","height","_updateViewCoordSys","_updateController","oldData","_data","seriesScope","expandAndCollapse","orient","getOrient","curvature","symbolRotate","symbolOffset","hoverAnimation","useNameLabel","fadeIn","diff","newIdx","symbolNeedsDraw","updateNode","update","oldIdx","symbolEl","getItemGraphicEl","removeNode","remove","execute","_nodeScaleRatio","_updateNodeAndLinkScale","eachItemGraphicEl","el","dataIndex","off","on","dispatchAction","seriesId","id","points","each","idx","getItemLayout","isNaN","push","min","max","fromPoints","viewCoordSys","coordinateSystem","zoomLimit","setBoundingRect","setCenter","setZoom","position","scale","_viewCoordSys","controller","controllerHost","setPointerChecker","e","rect","getBoundingRect","applyTransform","transform","contain","enable","zoom","getZoom","updateViewOnPan","dx","dy","updateViewOnZoom","originX","originY","nodeScale","_getNodeGlobalScale","invScale","coordSys","nodeScaleRatio","groupScale","groupZoom","roamZoom","dispose","removeAll","getItemVisual","getTreeNodeStyle","node","itemModel","itemStyle","getModel","getItemStyle","hoverItemStyle","lineStyle","getLineStyle","labelModel","hoverLabelModel","isExpand","children","length","symbolInnerColor","fill","isInit","tree","getNodeByDataIndex","virtualRoot","root","source","parentNode","sourceSymbolEl","sourceLayout","getLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","updateData","__radialRawX","__radialRawY","setItemGraphicEl","updateProps","symbolPath","getSymbolPath","realRoot","rootLayout","rad","isLeft","center","Math","atan2","PI","textPosition","setStyle","textRotation","textOrigin","verticalAlign","edge","__edge","BezierCurve","shape","getEdgeShape","style","defaults","opacity","strokeNoScale","fadeOut","keepLabel","cpx1","cpy1","cpx2","cpy2","x1","x2","y1","y2","radialCoor1","radialCoor2","radialCoor3","radialCoor4","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar View = require(\"../../coord/View\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file This file used to draw tree view.\n * @author Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    /**\n     * @private\n     * @type {module:echarts/componet/helper/RoamController}\n     */\n\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    this._updateViewCoordSys(seriesModel);\n\n    this._updateController(seriesModel, ecModel, api);\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // Update node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\n    this._updateNodeAndLinkScale(seriesModel);\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  _updateViewCoordSys: function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      max[0] += 1;\n      min[0] -= 1;\n    }\n\n    if (max[1] - min[1] === 0) {\n      max[1] += 1;\n      min[1] -= 1;\n    }\n\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'));\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      position: viewCoordSys.position,\n      scale: viewCoordSys.scale\n    });\n    this._viewCoordSys = viewCoordSys;\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }, this).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      this._updateNodeAndLinkScale(seriesModel);\n    }, this);\n  },\n  _updateNodeAndLinkScale: function (seriesModel) {\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0,\n          strokeNoScale: true\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n\n  if (seriesScope.layout === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}