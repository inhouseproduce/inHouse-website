{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeSensor = exports.getSensor = undefined;\n\nvar _id = require('./id');\n\nvar _id2 = _interopRequireDefault(_id);\n\nvar _sensors = require('./sensors');\n\nvar _constant = require('./constant');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * all the sensor objects.\n * 传感器池子\n */\n\n\nvar Sensors = {};\n/**\n * 获取 sensor\n * @param element\n * @returns {*}\n */\n\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\nvar getSensor = exports.getSensor = function getSensor(element) {\n  var sensorId = element.getAttribute(_constant.SizeSensorId); // 1. 已经存在，则直接取这个 sensor\n\n  if (sensorId && Sensors[sensorId]) {\n    return Sensors[sensorId];\n  } // 2. 不存在则创建\n\n\n  var newId = (0, _id2.default)();\n  element.setAttribute(_constant.SizeSensorId, newId);\n  var sensor = (0, _sensors.createSensor)(element); // 添加到池子中\n\n  Sensors[newId] = sensor;\n  return sensor;\n};\n/**\n * 移除 sensor\n * @param sensor\n */\n\n\nvar removeSensor = exports.removeSensor = function removeSensor(sensor) {\n  var sensorId = sensor.element.getAttribute(_constant.SizeSensorId); // 移除 attribute\n\n  sensor.element.removeAttribute(_constant.SizeSensorId); // 移除 sensor 对应的 事件 和 dom 结构\n\n  sensor.destroy(); // 存在则从 pool 中移除\n\n  if (sensorId && Sensors[sensorId]) {\n    delete Sensors[sensorId];\n  }\n};","map":{"version":3,"sources":["/Users/eduardjacobs/Desktop/files/inHouse-website/client/node_modules/size-sensor/lib/sensorPool.js"],"names":["Object","defineProperty","exports","value","removeSensor","getSensor","undefined","_id","require","_id2","_interopRequireDefault","_sensors","_constant","obj","__esModule","default","Sensors","element","sensorId","getAttribute","SizeSensorId","newId","setAttribute","sensor","createSensor","removeAttribute","destroy"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,SAAR,GAAoBC,SAA3C;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAjB;;AAEA,IAAIC,IAAI,GAAGC,sBAAsB,CAACH,GAAD,CAAjC;;AAEA,IAAII,QAAQ,GAAGH,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAII,SAAS,GAAGJ,OAAO,CAAC,YAAD,CAAvB;;AAEA,SAASE,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;AAE/F;;;;;;AAIA,IAAIG,OAAO,GAAG,EAAd;AAEA;;;;;;AAKA;;;;;AAKA,IAAIX,SAAS,GAAGH,OAAO,CAACG,SAAR,GAAoB,SAASA,SAAT,CAAmBY,OAAnB,EAA4B;AAC9D,MAAIC,QAAQ,GAAGD,OAAO,CAACE,YAAR,CAAqBP,SAAS,CAACQ,YAA/B,CAAf,CAD8D,CAG9D;;AACA,MAAIF,QAAQ,IAAIF,OAAO,CAACE,QAAD,CAAvB,EAAmC;AACjC,WAAOF,OAAO,CAACE,QAAD,CAAd;AACD,GAN6D,CAQ9D;;;AACA,MAAIG,KAAK,GAAG,CAAC,GAAGZ,IAAI,CAACM,OAAT,GAAZ;AACAE,EAAAA,OAAO,CAACK,YAAR,CAAqBV,SAAS,CAACQ,YAA/B,EAA6CC,KAA7C;AAEA,MAAIE,MAAM,GAAG,CAAC,GAAGZ,QAAQ,CAACa,YAAb,EAA2BP,OAA3B,CAAb,CAZ8D,CAa9D;;AACAD,EAAAA,OAAO,CAACK,KAAD,CAAP,GAAiBE,MAAjB;AAEA,SAAOA,MAAP;AACD,CAjBD;AAmBA;;;;;;AAIA,IAAInB,YAAY,GAAGF,OAAO,CAACE,YAAR,GAAuB,SAASA,YAAT,CAAsBmB,MAAtB,EAA8B;AACtE,MAAIL,QAAQ,GAAGK,MAAM,CAACN,OAAP,CAAeE,YAAf,CAA4BP,SAAS,CAACQ,YAAtC,CAAf,CADsE,CAGtE;;AACAG,EAAAA,MAAM,CAACN,OAAP,CAAeQ,eAAf,CAA+Bb,SAAS,CAACQ,YAAzC,EAJsE,CAKtE;;AACAG,EAAAA,MAAM,CAACG,OAAP,GANsE,CAQtE;;AACA,MAAIR,QAAQ,IAAIF,OAAO,CAACE,QAAD,CAAvB,EAAmC;AACjC,WAAOF,OAAO,CAACE,QAAD,CAAd;AACD;AACF,CAZD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeSensor = exports.getSensor = undefined;\n\nvar _id = require('./id');\n\nvar _id2 = _interopRequireDefault(_id);\n\nvar _sensors = require('./sensors');\n\nvar _constant = require('./constant');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * all the sensor objects.\n * 传感器池子\n */\nvar Sensors = {};\n\n/**\n * 获取 sensor\n * @param element\n * @returns {*}\n */\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\nvar getSensor = exports.getSensor = function getSensor(element) {\n  var sensorId = element.getAttribute(_constant.SizeSensorId);\n\n  // 1. 已经存在，则直接取这个 sensor\n  if (sensorId && Sensors[sensorId]) {\n    return Sensors[sensorId];\n  }\n\n  // 2. 不存在则创建\n  var newId = (0, _id2.default)();\n  element.setAttribute(_constant.SizeSensorId, newId);\n\n  var sensor = (0, _sensors.createSensor)(element);\n  // 添加到池子中\n  Sensors[newId] = sensor;\n\n  return sensor;\n};\n\n/**\n * 移除 sensor\n * @param sensor\n */\nvar removeSensor = exports.removeSensor = function removeSensor(sensor) {\n  var sensorId = sensor.element.getAttribute(_constant.SizeSensorId);\n\n  // 移除 attribute\n  sensor.element.removeAttribute(_constant.SizeSensorId);\n  // 移除 sensor 对应的 事件 和 dom 结构\n  sensor.destroy();\n\n  // 存在则从 pool 中移除\n  if (sensorId && Sensors[sensorId]) {\n    delete Sensors[sensorId];\n  }\n};"]},"metadata":{},"sourceType":"script"}