{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\nvar Z2_EMPHASIS_LIFT = 1;\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, path.getBoundingRect());\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function onload(img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke !== 'none';\n} // Most lifted color are duplicated.\n\n\nvar liftedColorMap = zrUtil.createHashMap();\nvar liftedColorCount = 0;\n\nfunction liftColor(color) {\n  if (typeof color !== 'string') {\n    return color;\n  }\n\n  var liftedColor = liftedColorMap.get(color);\n\n  if (!liftedColor) {\n    liftedColor = colorTool.lift(color, -0.1);\n\n    if (liftedColorCount < 10000) {\n      liftedColorMap.set(color, liftedColor);\n      liftedColorCount++;\n    }\n  }\n\n  return liftedColor;\n}\n\nfunction cacheElementStl(el) {\n  if (!el.__hoverStlDirty) {\n    return;\n  }\n\n  el.__hoverStlDirty = false;\n  var hoverStyle = el.__hoverStl;\n\n  if (!hoverStyle) {\n    el.__cachedNormalStl = el.__cachedNormalZ2 = null;\n    return;\n  }\n\n  var normalStyle = el.__cachedNormalStl = {};\n  el.__cachedNormalZ2 = el.z2;\n  var elStyle = el.style;\n\n  for (var name in hoverStyle) {\n    // See comment in `doSingleEnterHover`.\n    if (hoverStyle[name] != null) {\n      normalStyle[name] = elStyle[name];\n    }\n  } // Always cache fill and stroke to normalStyle for lifting color.\n\n\n  normalStyle.fill = elStyle.fill;\n  normalStyle.stroke = elStyle.stroke;\n}\n\nfunction doSingleEnterHover(el) {\n  var hoverStl = el.__hoverStl;\n\n  if (!hoverStl || el.__highlighted) {\n    return;\n  }\n\n  var useHoverLayer = el.useHoverLayer;\n  el.__highlighted = useHoverLayer ? 'layer' : 'plain';\n  var zr = el.__zr;\n\n  if (!zr && useHoverLayer) {\n    return;\n  }\n\n  var elTarget = el;\n  var targetStyle = el.style;\n\n  if (useHoverLayer) {\n    elTarget = zr.addHover(el);\n    targetStyle = elTarget.style;\n  }\n\n  rollbackDefaultTextStyle(targetStyle);\n\n  if (!useHoverLayer) {\n    cacheElementStl(elTarget);\n  } // styles can be:\n  // {\n  //    label: {\n  //        show: false,\n  //        position: 'outside',\n  //        fontSize: 18\n  //    },\n  //    emphasis: {\n  //        label: {\n  //            show: true\n  //        }\n  //    }\n  // },\n  // where properties of `emphasis` may not appear in `normal`. We previously use\n  // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n  // But consider rich text and setOption in merge mode, it is impossible to cover\n  // all properties in merge. So we use merge mode when setting style here, where\n  // only properties that is not `null/undefined` can be set. The disadventage:\n  // null/undefined can not be used to remove style any more in `emphasis`.\n\n\n  targetStyle.extendFrom(hoverStl);\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'fill');\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'stroke');\n  applyDefaultTextStyle(targetStyle);\n\n  if (!useHoverLayer) {\n    el.dirty(false);\n    el.z2 += Z2_EMPHASIS_LIFT;\n  }\n}\n\nfunction setDefaultHoverFillStroke(targetStyle, hoverStyle, prop) {\n  if (!hasFillOrStroke(hoverStyle[prop]) && hasFillOrStroke(targetStyle[prop])) {\n    targetStyle[prop] = liftColor(targetStyle[prop]);\n  }\n}\n\nfunction doSingleLeaveHover(el) {\n  var highlighted = el.__highlighted;\n\n  if (!highlighted) {\n    return;\n  }\n\n  el.__highlighted = false;\n\n  if (highlighted === 'layer') {\n    el.__zr && el.__zr.removeHover(el);\n  } else if (highlighted) {\n    var style = el.style;\n    var normalStl = el.__cachedNormalStl;\n\n    if (normalStl) {\n      rollbackDefaultTextStyle(style); // Consider null/undefined value, should use\n      // `setStyle` but not `extendFrom(stl, true)`.\n\n      el.setStyle(normalStl);\n      applyDefaultTextStyle(style);\n    } // `__cachedNormalZ2` will not be reset if calling `setElementHoverStyle`\n    // when `el` is on emphasis state. So here by comparing with 1, we try\n    // hard to make the bug case rare.\n\n\n    var normalZ2 = el.__cachedNormalZ2;\n\n    if (normalZ2 != null && el.z2 - normalZ2 === Z2_EMPHASIS_LIFT) {\n      el.z2 = normalZ2;\n    }\n  }\n}\n\nfunction traverseCall(el, method) {\n  el.isGroup ? el.traverse(function (child) {\n    !child.isGroup && method(child);\n  }) : method(el);\n}\n/**\n * Set hover style (namely \"emphasis style\") of element, based on the current\n * style of the given `el`.\n * This method should be called after all of the normal styles have been adopted\n * to the `el`. See the reason on `setHoverStyle`.\n *\n * @param {module:zrender/Element} el Should not be `zrender/container/Group`.\n * @param {Object|boolean} [hoverStl] The specified hover style.\n *        If set as `false`, disable the hover style.\n *        Similarly, The `el.hoverStyle` can alse be set\n *        as `false` to disable the hover style.\n *        Otherwise, use the default hover style if not provided.\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false] See `graphic.setAsHoverStyleTrigger`\n */\n\n\nfunction setElementHoverStyle(el, hoverStl) {\n  // For performance consideration, it might be better to make the \"hover style\" only the\n  // difference properties from the \"normal style\", but not a entire copy of all styles.\n  hoverStl = el.__hoverStl = hoverStl !== false && (hoverStl || {});\n  el.__hoverStlDirty = true; // FIXME\n  // It is not completely right to save \"normal\"/\"emphasis\" flag on elements.\n  // It probably should be saved on `data` of series. Consider the cases:\n  // (1) A highlighted elements are moved out of the view port and re-enter\n  // again by dataZoom.\n  // (2) call `setOption` and replace elements totally when they are highlighted.\n\n  if (el.__highlighted) {\n    // Consider the case:\n    // The styles of a highlighted `el` is being updated. The new \"emphasis style\"\n    // should be adapted to the `el`. Notice here new \"normal styles\" should have\n    // been set outside and the cached \"normal style\" is out of date.\n    el.__cachedNormalStl = null; // Do not clear `__cachedNormalZ2` here, because setting `z2` is not a constraint\n    // of this method. In most cases, `z2` is not set and hover style should be able\n    // to rollback. Of course, that would bring bug, but only in a rare case, see\n    // `doSingleLeaveHover` for details.\n\n    doSingleLeaveHover(el);\n    doSingleEnterHover(el);\n  }\n}\n/**\n * Emphasis (called by API) has higher priority than `mouseover`.\n * When element has been called to be entered emphasis, mouse over\n * should not trigger the highlight effect (for example, animation\n * scale) again, and `mouseout` should not downplay the highlight\n * effect. So the listener of `mouseover` and `mouseout` should\n * check `isInEmphasis`.\n *\n * @param {module:zrender/Element} el\n * @return {boolean}\n */\n\n\nfunction isInEmphasis(el) {\n  return el && el.__isEmphasisEntered;\n}\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasisEntered && traverseCall(this, doSingleEnterHover);\n}\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasisEntered && traverseCall(this, doSingleLeaveHover);\n}\n\nfunction enterEmphasis() {\n  this.__isEmphasisEntered = true;\n  traverseCall(this, doSingleEnterHover);\n}\n\nfunction leaveEmphasis() {\n  this.__isEmphasisEntered = false;\n  traverseCall(this, doSingleLeaveHover);\n}\n/**\n * Set hover style (namely \"emphasis style\") of element,\n * based on the current style of the given `el`.\n *\n * (1)\n * **CONSTRAINTS** for this method:\n * <A> This method MUST be called after all of the normal styles having been adopted\n * to the `el`.\n * <B> The input `hoverStyle` (that is, \"emphasis style\") MUST be the subset of the\n * \"normal style\" having been set to the el.\n * <C> `color` MUST be one of the \"normal styles\" (because color might be lifted as\n * a default hover style).\n *\n * The reason: this method treat the current style of the `el` as the \"normal style\"\n * and cache them when enter/update the \"emphasis style\". Consider the case: the `el`\n * is in \"emphasis\" state and `setOption`/`dispatchAction` trigger the style updating\n * logic, where the el should shift from the original emphasis style to the new\n * \"emphasis style\" and should be able to \"downplay\" back to the new \"normal style\".\n *\n * Indeed, it is error-prone to make a interface has so many constraints, but I have\n * not found a better solution yet to fit the backward compatibility, performance and\n * the current programming style.\n *\n * (2)\n * Call the method for a \"root\" element once. Do not call it for each descendants.\n * If the descendants elemenets of a group has itself hover style different from the\n * root group, we can simply mount the style on `el.hoverStyle` for them, but should\n * not call this method for them.\n *\n * @param {module:zrender/Element} el\n * @param {Object|boolean} [hoverStyle] See `graphic.setElementHoverStyle`.\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false] See `graphic.setAsHoverStyleTrigger`.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.isGroup ? el.traverse(function (child) {\n    // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n    // Often used when item group has a label element and it's hoverStyle is different\n    !child.isGroup && setElementHoverStyle(child, child.hoverStyle || hoverStyle);\n  }) : setElementHoverStyle(el, el.hoverStyle || hoverStyle);\n  setAsHoverStyleTrigger(el, opt);\n}\n/**\n * @param {Object|boolean} [opt] If `false`, means disable trigger.\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conveniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setAsHoverStyleTrigger(el, opt) {\n  var disable = opt === false;\n  el.__hoverSilentOnTouch = opt != null && opt.hoverSilentOnTouch; // Simple optimize, since this method might be\n  // called for each elements of a group in some cases.\n\n  if (!disable || el.__hoverStyleTrigger) {\n    var method = disable ? 'off' : 'on'; // Duplicated function will be auto-ignored, see Eventful.js.\n\n    el[method]('mouseover', onElementMouseOver)[method]('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n    el[method]('emphasis', enterEmphasis)[method]('normal', leaveEmphasis);\n    el.__hoverStyleTrigger = !disable;\n  }\n}\n/**\n * See more info in `setTextStyleCommon`.\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * See more info in `setTextStyleCommon`.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * See more info in `setTextStyleCommon`.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * The uniform entry of set text style, that is, retrieve style definitions\n * from `model` and set to `textStyle` object.\n *\n * Never in merge mode, but in overwrite mode, that is, all of the text style\n * properties will be set. (Consider the states of normal and emphasis and\n * default value can be adopted, merge would make the logic too complicated\n * to manage.)\n *\n * The `textStyle` object can either be a plain object or an instance of\n * `zrender/src/graphic/Style`, and either be the style of normal or emphasis.\n * After this mothod called, the `textStyle` object can then be used in\n * `el.setStyle(textStyle)` or `el.hoverStyle = textStyle`.\n *\n * Default value will be adopted and `insideRollbackOpt` will be created.\n * See `applyDefaultTextStyle` `rollbackDefaultTextStyle` for more details.\n *\n * opt: {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth); // Save original textPosition, because style.textPosition will be repalced by\n  // real location (like [10, 30]) in zrender.\n\n  textStyle.insideRawTextPosition = textStyle.textPosition;\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      textStyle.insideRollbackOpt = opt;\n      applyDefaultTextStyle(textStyle);\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n/**\n * Give some default value to the input `textStyle` object, based on the current settings\n * in this `textStyle` object.\n *\n * The Scenario:\n * when text position is `inside` and `textFill` is not specified, we show\n * text border by default for better view. But it should be considered that text position\n * might be changed when hovering or being emphasis, where the `insideRollback` is used to\n * restore the style.\n *\n * Usage (& NOTICE):\n * When a style object (eithor plain object or instance of `zrender/src/graphic/Style`) is\n * about to be modified on its text related properties, `rollbackDefaultTextStyle` should\n * be called before the modification and `applyDefaultTextStyle` should be called after that.\n * (For the case that all of the text related properties is reset, like `setTextStyleCommon`\n * does, `rollbackDefaultTextStyle` is not needed to be called).\n */\n\n\nfunction applyDefaultTextStyle(textStyle) {\n  var opt = textStyle.insideRollbackOpt; // Only `insideRollbackOpt` created (in `setTextStyleCommon`),\n  // applyDefaultTextStyle works.\n\n  if (!opt || textStyle.textFill != null) {\n    return;\n  }\n\n  var useInsideStyle = opt.useInsideStyle;\n  var textPosition = textStyle.insideRawTextPosition;\n  var insideRollback;\n  var autoColor = opt.autoColor;\n\n  if (useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  } else if (autoColor != null) {\n    insideRollback = {\n      textFill: null\n    };\n    textStyle.textFill = autoColor;\n  } // Always set `insideRollback`, for clearing previous.\n\n\n  if (insideRollback) {\n    textStyle.insideRollback = insideRollback;\n  }\n}\n/**\n * Consider the case: in a scatter,\n * label: {\n *     normal: {position: 'inside'},\n *     emphasis: {position: 'top'}\n * }\n * In the normal state, the `textFill` will be set as '#fff' for pretty view (see\n * `applyDefaultTextStyle`), but when switching to emphasis state, the `textFill`\n * should be retured to 'autoColor', but not keep '#fff'.\n */\n\n\nfunction rollbackDefaultTextStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n    style.insideRollback = null;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  // FIXME: this way migth be incorrect when grpahic clipped by a corner.\n  // and when element have border.\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height); // If the total rect is cliped, nothing, including the border,\n  // should be painted. So return undefined.\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.Z2_EMPHASIS_LIFT = Z2_EMPHASIS_LIFT;\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setElementHoverStyle = setElementHoverStyle;\nexports.isInEmphasis = isInEmphasis;\nexports.setHoverStyle = setHoverStyle;\nexports.setAsHoverStyleTrigger = setAsHoverStyleTrigger;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","map":{"version":3,"sources":["/Users/eduardjacobs/Desktop/files/inHouse-website/client/node_modules/echarts/lib/util/graphic.js"],"names":["zrUtil","require","pathTool","colorTool","matrix","vector","Path","Transformable","ZImage","exports","Image","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","IncrementalDisplayable","round","Math","mathMax","max","mathMin","min","EMPTY_OBJ","Z2_EMPHASIS_LIFT","extendShape","opts","extend","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","centerGraphic","getBoundingRect","resizePath","makeImage","imageUrl","style","image","x","y","width","height","onload","img","boundingRect","setStyle","aspect","cx","cy","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","shape","lineWidth","x1","x2","subPixelOptimize","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftedColorMap","createHashMap","liftedColorCount","liftColor","color","liftedColor","get","lift","set","cacheElementStl","el","__hoverStlDirty","hoverStyle","__hoverStl","__cachedNormalStl","__cachedNormalZ2","normalStyle","z2","elStyle","name","fill","stroke","doSingleEnterHover","hoverStl","__highlighted","useHoverLayer","zr","__zr","elTarget","targetStyle","addHover","rollbackDefaultTextStyle","extendFrom","setDefaultHoverFillStroke","applyDefaultTextStyle","dirty","prop","doSingleLeaveHover","highlighted","removeHover","normalStl","normalZ2","traverseCall","method","isGroup","traverse","child","setElementHoverStyle","isInEmphasis","__isEmphasisEntered","onElementMouseOver","e","__hoverSilentOnTouch","zrByTouch","onElementMouseOut","enterEmphasis","leaveEmphasis","setHoverStyle","opt","setAsHoverStyleTrigger","disable","hoverSilentOnTouch","__hoverStyleTrigger","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","labelFetcher","labelDataIndex","labelDimIndex","showNormal","getShallow","showEmphasis","baseText","getFormattedLabel","isFunction","defaultText","normalStyleText","emphasisStyleText","retrieve2","setTextStyle","text","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","setText","labelModel","defaultColor","isRectText","autoColor","textPosition","textOffset","labelRotate","PI","textRotation","textDistance","ecModel","globalTextStyle","option","richItemNames","getRichItemNames","richResult","hasOwnProperty","richTextStyle","getModel","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","textFill","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","insideRawTextPosition","insideRollbackOpt","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","insideRollback","indexOf","getFont","gTextStyleModel","trim","join","animateOrSetProps","isUpdate","props","animatableModel","dataIndex","cb","animationEnabled","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","updateProps","initProps","getTransform","target","ancestor","mat","identity","mul","getLocalTransform","parent","transform","invert","isArrayLike","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getElMap","g","elMap","anid","getAnimatableProps","obj","clone","rotation","elMap1","oldEl","newProp","clipPointsByRect","points","map","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","slice","defaults","replace"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\nvar Z2_EMPHASIS_LIFT = 1;\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, path.getBoundingRect());\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke !== 'none';\n} // Most lifted color are duplicated.\n\n\nvar liftedColorMap = zrUtil.createHashMap();\nvar liftedColorCount = 0;\n\nfunction liftColor(color) {\n  if (typeof color !== 'string') {\n    return color;\n  }\n\n  var liftedColor = liftedColorMap.get(color);\n\n  if (!liftedColor) {\n    liftedColor = colorTool.lift(color, -0.1);\n\n    if (liftedColorCount < 10000) {\n      liftedColorMap.set(color, liftedColor);\n      liftedColorCount++;\n    }\n  }\n\n  return liftedColor;\n}\n\nfunction cacheElementStl(el) {\n  if (!el.__hoverStlDirty) {\n    return;\n  }\n\n  el.__hoverStlDirty = false;\n  var hoverStyle = el.__hoverStl;\n\n  if (!hoverStyle) {\n    el.__cachedNormalStl = el.__cachedNormalZ2 = null;\n    return;\n  }\n\n  var normalStyle = el.__cachedNormalStl = {};\n  el.__cachedNormalZ2 = el.z2;\n  var elStyle = el.style;\n\n  for (var name in hoverStyle) {\n    // See comment in `doSingleEnterHover`.\n    if (hoverStyle[name] != null) {\n      normalStyle[name] = elStyle[name];\n    }\n  } // Always cache fill and stroke to normalStyle for lifting color.\n\n\n  normalStyle.fill = elStyle.fill;\n  normalStyle.stroke = elStyle.stroke;\n}\n\nfunction doSingleEnterHover(el) {\n  var hoverStl = el.__hoverStl;\n\n  if (!hoverStl || el.__highlighted) {\n    return;\n  }\n\n  var useHoverLayer = el.useHoverLayer;\n  el.__highlighted = useHoverLayer ? 'layer' : 'plain';\n  var zr = el.__zr;\n\n  if (!zr && useHoverLayer) {\n    return;\n  }\n\n  var elTarget = el;\n  var targetStyle = el.style;\n\n  if (useHoverLayer) {\n    elTarget = zr.addHover(el);\n    targetStyle = elTarget.style;\n  }\n\n  rollbackDefaultTextStyle(targetStyle);\n\n  if (!useHoverLayer) {\n    cacheElementStl(elTarget);\n  } // styles can be:\n  // {\n  //    label: {\n  //        show: false,\n  //        position: 'outside',\n  //        fontSize: 18\n  //    },\n  //    emphasis: {\n  //        label: {\n  //            show: true\n  //        }\n  //    }\n  // },\n  // where properties of `emphasis` may not appear in `normal`. We previously use\n  // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n  // But consider rich text and setOption in merge mode, it is impossible to cover\n  // all properties in merge. So we use merge mode when setting style here, where\n  // only properties that is not `null/undefined` can be set. The disadventage:\n  // null/undefined can not be used to remove style any more in `emphasis`.\n\n\n  targetStyle.extendFrom(hoverStl);\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'fill');\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'stroke');\n  applyDefaultTextStyle(targetStyle);\n\n  if (!useHoverLayer) {\n    el.dirty(false);\n    el.z2 += Z2_EMPHASIS_LIFT;\n  }\n}\n\nfunction setDefaultHoverFillStroke(targetStyle, hoverStyle, prop) {\n  if (!hasFillOrStroke(hoverStyle[prop]) && hasFillOrStroke(targetStyle[prop])) {\n    targetStyle[prop] = liftColor(targetStyle[prop]);\n  }\n}\n\nfunction doSingleLeaveHover(el) {\n  var highlighted = el.__highlighted;\n\n  if (!highlighted) {\n    return;\n  }\n\n  el.__highlighted = false;\n\n  if (highlighted === 'layer') {\n    el.__zr && el.__zr.removeHover(el);\n  } else if (highlighted) {\n    var style = el.style;\n    var normalStl = el.__cachedNormalStl;\n\n    if (normalStl) {\n      rollbackDefaultTextStyle(style); // Consider null/undefined value, should use\n      // `setStyle` but not `extendFrom(stl, true)`.\n\n      el.setStyle(normalStl);\n      applyDefaultTextStyle(style);\n    } // `__cachedNormalZ2` will not be reset if calling `setElementHoverStyle`\n    // when `el` is on emphasis state. So here by comparing with 1, we try\n    // hard to make the bug case rare.\n\n\n    var normalZ2 = el.__cachedNormalZ2;\n\n    if (normalZ2 != null && el.z2 - normalZ2 === Z2_EMPHASIS_LIFT) {\n      el.z2 = normalZ2;\n    }\n  }\n}\n\nfunction traverseCall(el, method) {\n  el.isGroup ? el.traverse(function (child) {\n    !child.isGroup && method(child);\n  }) : method(el);\n}\n/**\n * Set hover style (namely \"emphasis style\") of element, based on the current\n * style of the given `el`.\n * This method should be called after all of the normal styles have been adopted\n * to the `el`. See the reason on `setHoverStyle`.\n *\n * @param {module:zrender/Element} el Should not be `zrender/container/Group`.\n * @param {Object|boolean} [hoverStl] The specified hover style.\n *        If set as `false`, disable the hover style.\n *        Similarly, The `el.hoverStyle` can alse be set\n *        as `false` to disable the hover style.\n *        Otherwise, use the default hover style if not provided.\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false] See `graphic.setAsHoverStyleTrigger`\n */\n\n\nfunction setElementHoverStyle(el, hoverStl) {\n  // For performance consideration, it might be better to make the \"hover style\" only the\n  // difference properties from the \"normal style\", but not a entire copy of all styles.\n  hoverStl = el.__hoverStl = hoverStl !== false && (hoverStl || {});\n  el.__hoverStlDirty = true; // FIXME\n  // It is not completely right to save \"normal\"/\"emphasis\" flag on elements.\n  // It probably should be saved on `data` of series. Consider the cases:\n  // (1) A highlighted elements are moved out of the view port and re-enter\n  // again by dataZoom.\n  // (2) call `setOption` and replace elements totally when they are highlighted.\n\n  if (el.__highlighted) {\n    // Consider the case:\n    // The styles of a highlighted `el` is being updated. The new \"emphasis style\"\n    // should be adapted to the `el`. Notice here new \"normal styles\" should have\n    // been set outside and the cached \"normal style\" is out of date.\n    el.__cachedNormalStl = null; // Do not clear `__cachedNormalZ2` here, because setting `z2` is not a constraint\n    // of this method. In most cases, `z2` is not set and hover style should be able\n    // to rollback. Of course, that would bring bug, but only in a rare case, see\n    // `doSingleLeaveHover` for details.\n\n    doSingleLeaveHover(el);\n    doSingleEnterHover(el);\n  }\n}\n/**\n * Emphasis (called by API) has higher priority than `mouseover`.\n * When element has been called to be entered emphasis, mouse over\n * should not trigger the highlight effect (for example, animation\n * scale) again, and `mouseout` should not downplay the highlight\n * effect. So the listener of `mouseover` and `mouseout` should\n * check `isInEmphasis`.\n *\n * @param {module:zrender/Element} el\n * @return {boolean}\n */\n\n\nfunction isInEmphasis(el) {\n  return el && el.__isEmphasisEntered;\n}\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasisEntered && traverseCall(this, doSingleEnterHover);\n}\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasisEntered && traverseCall(this, doSingleLeaveHover);\n}\n\nfunction enterEmphasis() {\n  this.__isEmphasisEntered = true;\n  traverseCall(this, doSingleEnterHover);\n}\n\nfunction leaveEmphasis() {\n  this.__isEmphasisEntered = false;\n  traverseCall(this, doSingleLeaveHover);\n}\n/**\n * Set hover style (namely \"emphasis style\") of element,\n * based on the current style of the given `el`.\n *\n * (1)\n * **CONSTRAINTS** for this method:\n * <A> This method MUST be called after all of the normal styles having been adopted\n * to the `el`.\n * <B> The input `hoverStyle` (that is, \"emphasis style\") MUST be the subset of the\n * \"normal style\" having been set to the el.\n * <C> `color` MUST be one of the \"normal styles\" (because color might be lifted as\n * a default hover style).\n *\n * The reason: this method treat the current style of the `el` as the \"normal style\"\n * and cache them when enter/update the \"emphasis style\". Consider the case: the `el`\n * is in \"emphasis\" state and `setOption`/`dispatchAction` trigger the style updating\n * logic, where the el should shift from the original emphasis style to the new\n * \"emphasis style\" and should be able to \"downplay\" back to the new \"normal style\".\n *\n * Indeed, it is error-prone to make a interface has so many constraints, but I have\n * not found a better solution yet to fit the backward compatibility, performance and\n * the current programming style.\n *\n * (2)\n * Call the method for a \"root\" element once. Do not call it for each descendants.\n * If the descendants elemenets of a group has itself hover style different from the\n * root group, we can simply mount the style on `el.hoverStyle` for them, but should\n * not call this method for them.\n *\n * @param {module:zrender/Element} el\n * @param {Object|boolean} [hoverStyle] See `graphic.setElementHoverStyle`.\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false] See `graphic.setAsHoverStyleTrigger`.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.isGroup ? el.traverse(function (child) {\n    // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n    // Often used when item group has a label element and it's hoverStyle is different\n    !child.isGroup && setElementHoverStyle(child, child.hoverStyle || hoverStyle);\n  }) : setElementHoverStyle(el, el.hoverStyle || hoverStyle);\n  setAsHoverStyleTrigger(el, opt);\n}\n/**\n * @param {Object|boolean} [opt] If `false`, means disable trigger.\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conveniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setAsHoverStyleTrigger(el, opt) {\n  var disable = opt === false;\n  el.__hoverSilentOnTouch = opt != null && opt.hoverSilentOnTouch; // Simple optimize, since this method might be\n  // called for each elements of a group in some cases.\n\n  if (!disable || el.__hoverStyleTrigger) {\n    var method = disable ? 'off' : 'on'; // Duplicated function will be auto-ignored, see Eventful.js.\n\n    el[method]('mouseover', onElementMouseOver)[method]('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n    el[method]('emphasis', enterEmphasis)[method]('normal', leaveEmphasis);\n    el.__hoverStyleTrigger = !disable;\n  }\n}\n/**\n * See more info in `setTextStyleCommon`.\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * See more info in `setTextStyleCommon`.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * See more info in `setTextStyleCommon`.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * The uniform entry of set text style, that is, retrieve style definitions\n * from `model` and set to `textStyle` object.\n *\n * Never in merge mode, but in overwrite mode, that is, all of the text style\n * properties will be set. (Consider the states of normal and emphasis and\n * default value can be adopted, merge would make the logic too complicated\n * to manage.)\n *\n * The `textStyle` object can either be a plain object or an instance of\n * `zrender/src/graphic/Style`, and either be the style of normal or emphasis.\n * After this mothod called, the `textStyle` object can then be used in\n * `el.setStyle(textStyle)` or `el.hoverStyle = textStyle`.\n *\n * Default value will be adopted and `insideRollbackOpt` will be created.\n * See `applyDefaultTextStyle` `rollbackDefaultTextStyle` for more details.\n *\n * opt: {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth); // Save original textPosition, because style.textPosition will be repalced by\n  // real location (like [10, 30]) in zrender.\n\n  textStyle.insideRawTextPosition = textStyle.textPosition;\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      textStyle.insideRollbackOpt = opt;\n      applyDefaultTextStyle(textStyle);\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n/**\n * Give some default value to the input `textStyle` object, based on the current settings\n * in this `textStyle` object.\n *\n * The Scenario:\n * when text position is `inside` and `textFill` is not specified, we show\n * text border by default for better view. But it should be considered that text position\n * might be changed when hovering or being emphasis, where the `insideRollback` is used to\n * restore the style.\n *\n * Usage (& NOTICE):\n * When a style object (eithor plain object or instance of `zrender/src/graphic/Style`) is\n * about to be modified on its text related properties, `rollbackDefaultTextStyle` should\n * be called before the modification and `applyDefaultTextStyle` should be called after that.\n * (For the case that all of the text related properties is reset, like `setTextStyleCommon`\n * does, `rollbackDefaultTextStyle` is not needed to be called).\n */\n\n\nfunction applyDefaultTextStyle(textStyle) {\n  var opt = textStyle.insideRollbackOpt; // Only `insideRollbackOpt` created (in `setTextStyleCommon`),\n  // applyDefaultTextStyle works.\n\n  if (!opt || textStyle.textFill != null) {\n    return;\n  }\n\n  var useInsideStyle = opt.useInsideStyle;\n  var textPosition = textStyle.insideRawTextPosition;\n  var insideRollback;\n  var autoColor = opt.autoColor;\n\n  if (useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  } else if (autoColor != null) {\n    insideRollback = {\n      textFill: null\n    };\n    textStyle.textFill = autoColor;\n  } // Always set `insideRollback`, for clearing previous.\n\n\n  if (insideRollback) {\n    textStyle.insideRollback = insideRollback;\n  }\n}\n/**\n * Consider the case: in a scatter,\n * label: {\n *     normal: {position: 'inside'},\n *     emphasis: {position: 'top'}\n * }\n * In the normal state, the `textFill` will be set as '#fff' for pretty view (see\n * `applyDefaultTextStyle`), but when switching to emphasis state, the `textFill`\n * should be retured to 'autoColor', but not keep '#fff'.\n */\n\n\nfunction rollbackDefaultTextStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n    style.insideRollback = null;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  // FIXME: this way migth be incorrect when grpahic clipped by a corner.\n  // and when element have border.\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height); // If the total rect is cliped, nothing, including the border,\n  // should be painted. So return undefined.\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.Z2_EMPHASIS_LIFT = Z2_EMPHASIS_LIFT;\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setElementHoverStyle = setElementHoverStyle;\nexports.isInEmphasis = isInEmphasis;\nexports.setHoverStyle = setHoverStyle;\nexports.setAsHoverStyleTrigger = setAsHoverStyleTrigger;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;"]},"metadata":{},"sourceType":"script"}