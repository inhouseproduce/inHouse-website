{"ast":null,"code":"import _toConsumableArray from \"/Users/eduardjacobs/Desktop/files/inHouse-website/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/eduardjacobs/Desktop/files/inHouse-website/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as actionTypes from './actions';\nimport config from './../config';\n\nvar initialState = _objectSpread({\n  isOpen: [],\n  //for active default menu\n  isTrigger: []\n}, config, {\n  isFullScreen: false // static can't change\n\n});\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var trigger = [];\n  var open = [];\n\n  switch (action.type) {\n    case actionTypes.COLLAPSE_MENU:\n      return _objectSpread({}, state, {\n        collapseMenu: !state.collapseMenu\n      });\n\n    case actionTypes.COLLAPSE_TOGGLE:\n      if (action.menu.type === 'sub') {\n        open = state.isOpen;\n        trigger = state.isTrigger;\n        var triggerIndex = trigger.indexOf(action.menu.id);\n\n        if (triggerIndex > -1) {\n          open = open.filter(function (item) {\n            return item !== action.menu.id;\n          });\n          trigger = trigger.filter(function (item) {\n            return item !== action.menu.id;\n          });\n        }\n\n        if (triggerIndex === -1) {\n          open = [].concat(_toConsumableArray(open), [action.menu.id]);\n          trigger = [].concat(_toConsumableArray(trigger), [action.menu.id]);\n        }\n      } else {\n        open = state.isOpen;\n\n        var _triggerIndex = state.isTrigger.indexOf(action.menu.id);\n\n        trigger = _triggerIndex === -1 ? [action.menu.id] : [];\n        open = _triggerIndex === -1 ? [action.menu.id] : [];\n      }\n\n      return _objectSpread({}, state, {\n        isOpen: open,\n        isTrigger: trigger\n      });\n\n    case actionTypes.NAV_CONTENT_LEAVE:\n      return _objectSpread({}, state, {\n        isOpen: open,\n        isTrigger: trigger\n      });\n\n    case actionTypes.NAV_COLLAPSE_LEAVE:\n      if (action.menu.type === 'sub') {\n        open = state.isOpen;\n        trigger = state.isTrigger;\n\n        var _triggerIndex2 = trigger.indexOf(action.menu.id);\n\n        if (_triggerIndex2 > -1) {\n          open = open.filter(function (item) {\n            return item !== action.menu.id;\n          });\n          trigger = trigger.filter(function (item) {\n            return item !== action.menu.id;\n          });\n        }\n\n        return _objectSpread({}, state, {\n          isOpen: open,\n          isTrigger: trigger\n        });\n      }\n\n      return _objectSpread({}, state);\n\n    case actionTypes.FULL_SCREEN:\n      return _objectSpread({}, state, {\n        isFullScreen: !state.isFullScreen\n      });\n\n    case actionTypes.FULL_SCREEN_EXIT:\n      return _objectSpread({}, state, {\n        isFullScreen: false\n      });\n\n    case actionTypes.CHANGE_LAYOUT:\n      return _objectSpread({}, state, {\n        layout: action.layout\n      });\n\n    case actionTypes.CHANGE_PRE_LAYOUT:\n      return _objectSpread({}, state, {\n        preLayout: action.preLayout\n      });\n\n    case actionTypes.LAYOUT_TYPE:\n      return _objectSpread({}, state, {\n        layoutType: action.layoutType,\n        navBackColor: action.layoutType === 'dark' && initialState.navBackColor === 'navbar-default' ? 'navbar-dark' : state.navBackColor,\n        navBrandColor: action.layoutType === 'dark' && initialState.navBrandColor === 'brand-default' ? 'brand-dark' : state.navBrandColor,\n        navBackImage: initialState.navBackImage,\n        headerBackColor: initialState.headerBackColor\n      });\n\n    case actionTypes.NAV_BACK_COLOR:\n      return _objectSpread({}, state, {\n        navBackColor: action.navBackColor,\n        navBackImage: initialState.navBackImage,\n        navBrandColor: 'brand-default',\n        layoutType: state.layoutType === 'menu-light' ? 'menu-dark' : state.layoutType\n      });\n\n    case actionTypes.NAV_BACK_IMAGE:\n      return _objectSpread({}, state, {\n        layoutType: 'menu-dark',\n        navBackImage: action.navBackImage,\n        navBrandColor: '',\n        navBackColor: ''\n      });\n\n    case actionTypes.NAV_BRAND_COLOR:\n      return _objectSpread({}, state, {\n        navBrandColor: action.navBrandColor\n      });\n\n    case actionTypes.HEADER_BACK_COLOR:\n      return _objectSpread({}, state, {\n        headerBackColor: action.headerBackColor\n      });\n\n    case actionTypes.NAV_ICON_COLOR:\n      return _objectSpread({}, state, {\n        navIconColor: !state.navIconColor\n      });\n\n    case actionTypes.RTL_LAYOUT:\n      return _objectSpread({}, state, {\n        rtlLayout: !state.rtlLayout\n      });\n\n    case actionTypes.NAV_FIXED_LAYOUT:\n      return _objectSpread({}, state, {\n        navFixedLayout: !state.navFixedLayout\n      });\n\n    case actionTypes.HEADER_FIXED_LAYOUT:\n      return _objectSpread({}, state, {\n        headerFixedLayout: !state.headerFixedLayout,\n        headerBackColor: !state.headerFixedLayout && initialState.headerBackColor === 'header-default' ? 'header-blue' : state.headerBackColor,\n        navBrandColor: !state.headerFixedLayout ? 'brand-default' : initialState.navBrandColor\n      });\n\n    case actionTypes.BOX_LAYOUT:\n      return _objectSpread({}, state, {\n        boxLayout: !state.boxLayout\n      });\n\n    case actionTypes.LAYOUT6_BACKGROUND:\n      return _objectSpread({}, state, {\n        layout6Background: action.value.layout6Background,\n        layout6BackSize: action.value.layout6BackSize\n      });\n\n    case actionTypes.NAV_DROPDOWN_ICON:\n      return _objectSpread({}, state, {\n        navDropdownIcon: action.navDropdownIcon\n      });\n\n    case actionTypes.NAV_LIST_ICON:\n      return _objectSpread({}, state, {\n        navListIcon: action.navListIcon\n      });\n\n    case actionTypes.NAV_ACTIVE_LIST_COLOR:\n      return _objectSpread({}, state, {\n        navActiveListColor: action.navActiveListColor\n      });\n\n    case actionTypes.NAV_LIST_TITLE_COLOR:\n      return _objectSpread({}, state, {\n        navListTitleColor: action.navListTitleColor\n      });\n\n    case actionTypes.NAV_LIST_TITLE_HIDE:\n      return _objectSpread({}, state, {\n        navListTitleHide: !state.navListTitleHide\n      });\n\n    case actionTypes.CONFIG_BLOCK:\n      return _objectSpread({}, state, {\n        configBlock: !state.configBlock\n      });\n\n    case actionTypes.RESET:\n      return _objectSpread({}, state, {\n        layout: initialState.layout,\n        preLayout: initialState.preLayout,\n        collapseMenu: initialState.collapseMenu,\n        layoutType: initialState.layoutType,\n        navIconColor: initialState.navIconColor,\n        headerBackColor: initialState.headerBackColor,\n        navBackColor: initialState.navBackColor,\n        navBrandColor: initialState.navBrandColor,\n        navBackImage: initialState.navBackImage,\n        rtlLayout: initialState.rtlLayout,\n        navFixedLayout: initialState.navFixedLayout,\n        headerFixedLayout: initialState.headerFixedLayout,\n        boxLayout: initialState.boxLayout,\n        navDropdownIcon: initialState.navDropdownIcon,\n        navListIcon: initialState.navListIcon,\n        navActiveListColor: initialState.navActiveListColor,\n        navListTitleColor: initialState.navListTitleColor,\n        navListTitleHide: initialState.navListTitleHide,\n        layout6Background: initialState.layout6Background\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/eduardjacobs/Desktop/files/inHouse-website/client/src/store/reducer.js"],"names":["actionTypes","config","initialState","isOpen","isTrigger","isFullScreen","reducer","state","action","trigger","open","type","COLLAPSE_MENU","collapseMenu","COLLAPSE_TOGGLE","menu","triggerIndex","indexOf","id","filter","item","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","layout","CHANGE_PRE_LAYOUT","preLayout","LAYOUT_TYPE","layoutType","navBackColor","navBrandColor","navBackImage","headerBackColor","NAV_BACK_COLOR","NAV_BACK_IMAGE","NAV_BRAND_COLOR","HEADER_BACK_COLOR","NAV_ICON_COLOR","navIconColor","RTL_LAYOUT","rtlLayout","NAV_FIXED_LAYOUT","navFixedLayout","HEADER_FIXED_LAYOUT","headerFixedLayout","BOX_LAYOUT","boxLayout","LAYOUT6_BACKGROUND","layout6Background","value","layout6BackSize","NAV_DROPDOWN_ICON","navDropdownIcon","NAV_LIST_ICON","navListIcon","NAV_ACTIVE_LIST_COLOR","navActiveListColor","NAV_LIST_TITLE_COLOR","navListTitleColor","NAV_LIST_TITLE_HIDE","navListTitleHide","CONFIG_BLOCK","configBlock","RESET"],"mappings":"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","sourcesContent":["import * as actionTypes from './actions';\r\nimport config from './../config';\r\n\r\nconst initialState = {\r\n    isOpen: [], //for active default menu\r\n    isTrigger: [], //for active default menu, set blank for horizontal\r\n    ...config,\r\n    isFullScreen: false, // static can't change\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let trigger = [];\r\n    let open = [];\r\n\r\n    switch (action.type) {\r\n        case actionTypes.COLLAPSE_MENU:\r\n            return {\r\n                ...state,\r\n                collapseMenu: !state.collapseMenu\r\n            };\r\n        case actionTypes.COLLAPSE_TOGGLE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n\r\n                if (triggerIndex === -1) {\r\n                    open = [...open, action.menu.id];\r\n                    trigger = [...trigger, action.menu.id];\r\n                }\r\n            } else {\r\n                open = state.isOpen;\r\n                const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\r\n                trigger = (triggerIndex === -1) ? [action.menu.id] : [];\r\n                open = (triggerIndex === -1) ? [action.menu.id] : [];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger\r\n            };\r\n        case actionTypes.NAV_CONTENT_LEAVE:\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger,\r\n            };\r\n        case actionTypes.NAV_COLLAPSE_LEAVE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n                return {\r\n                    ...state,\r\n                    isOpen: open,\r\n                    isTrigger: trigger,\r\n                };\r\n            }\r\n            return {...state};\r\n        case actionTypes.FULL_SCREEN :\r\n            return {\r\n                ...state,\r\n                isFullScreen: !state.isFullScreen\r\n            };\r\n        case actionTypes.FULL_SCREEN_EXIT:\r\n            return {\r\n                ...state,\r\n                isFullScreen: false\r\n            };\r\n        case actionTypes.CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layout: action.layout\r\n            };\r\n        case actionTypes.CHANGE_PRE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                preLayout: action.preLayout\r\n            };\r\n        case actionTypes.LAYOUT_TYPE:\r\n            return {\r\n                ...state,\r\n                layoutType: action.layoutType,\r\n                navBackColor: (action.layoutType === 'dark' && initialState.navBackColor === 'navbar-default') ? 'navbar-dark' : state.navBackColor,\r\n                navBrandColor: (action.layoutType === 'dark' && initialState.navBrandColor === 'brand-default') ? 'brand-dark' : state.navBrandColor,\r\n                navBackImage: initialState.navBackImage,\r\n                headerBackColor: initialState.headerBackColor\r\n            };\r\n        case actionTypes.NAV_BACK_COLOR:\r\n            return {\r\n                ...state,\r\n                navBackColor: action.navBackColor,\r\n                navBackImage: initialState.navBackImage,\r\n                navBrandColor: 'brand-default',\r\n                layoutType: (state.layoutType === 'menu-light') ? 'menu-dark' : state.layoutType\r\n            };\r\n        case actionTypes.NAV_BACK_IMAGE:\r\n            return {\r\n                ...state,\r\n                layoutType: 'menu-dark',\r\n                navBackImage: action.navBackImage,\r\n                navBrandColor: '',\r\n                navBackColor: ''\r\n            };\r\n        case actionTypes.NAV_BRAND_COLOR:\r\n            return {\r\n                ...state,\r\n                navBrandColor: action.navBrandColor\r\n            };\r\n        case actionTypes.HEADER_BACK_COLOR:\r\n            return {\r\n                ...state,\r\n                headerBackColor: action.headerBackColor\r\n            };\r\n        case actionTypes.NAV_ICON_COLOR:\r\n            return {\r\n                ...state,\r\n                navIconColor: !state.navIconColor\r\n            };\r\n        case actionTypes.RTL_LAYOUT:\r\n            return {\r\n                ...state,\r\n                rtlLayout: !state.rtlLayout\r\n            };\r\n        case actionTypes.NAV_FIXED_LAYOUT:\r\n            return {\r\n                ...state,\r\n                navFixedLayout: !state.navFixedLayout\r\n            };\r\n        case actionTypes.HEADER_FIXED_LAYOUT:\r\n            return {\r\n                ...state,\r\n                headerFixedLayout: !state.headerFixedLayout,\r\n                headerBackColor: (!state.headerFixedLayout && initialState.headerBackColor === 'header-default') ? 'header-blue' : state.headerBackColor,\r\n                navBrandColor: (!state.headerFixedLayout) ? 'brand-default' : initialState.navBrandColor\r\n            };\r\n        case actionTypes.BOX_LAYOUT:\r\n            return {\r\n                ...state,\r\n                boxLayout: !state.boxLayout\r\n            };\r\n        case actionTypes.LAYOUT6_BACKGROUND:\r\n            return {\r\n                ...state,\r\n                layout6Background: action.value.layout6Background,\r\n                layout6BackSize: action.value.layout6BackSize\r\n            };\r\n        case actionTypes.NAV_DROPDOWN_ICON:\r\n            return {\r\n                ...state,\r\n                navDropdownIcon: action.navDropdownIcon,\r\n            };\r\n        case actionTypes.NAV_LIST_ICON:\r\n            return {\r\n                ...state,\r\n                navListIcon: action.navListIcon,\r\n            };\r\n        case actionTypes.NAV_ACTIVE_LIST_COLOR:\r\n            return {\r\n                ...state,\r\n                navActiveListColor: action.navActiveListColor,\r\n            };\r\n        case actionTypes.NAV_LIST_TITLE_COLOR:\r\n            return {\r\n                ...state,\r\n                navListTitleColor: action.navListTitleColor,\r\n            };\r\n        case actionTypes.NAV_LIST_TITLE_HIDE:\r\n            return {\r\n                ...state,\r\n                navListTitleHide: !state.navListTitleHide,\r\n            };\r\n        case actionTypes.CONFIG_BLOCK:\r\n            return {\r\n                ...state,\r\n                configBlock: !state.configBlock,\r\n            };\r\n        case actionTypes.RESET:\r\n            return {\r\n                ...state,\r\n                layout: initialState.layout,\r\n                preLayout: initialState.preLayout,\r\n                collapseMenu: initialState.collapseMenu,\r\n                layoutType: initialState.layoutType,\r\n                navIconColor: initialState.navIconColor,\r\n                headerBackColor: initialState.headerBackColor,\r\n                navBackColor: initialState.navBackColor,\r\n                navBrandColor: initialState.navBrandColor,\r\n                navBackImage: initialState.navBackImage,\r\n                rtlLayout: initialState.rtlLayout,\r\n                navFixedLayout: initialState.navFixedLayout,\r\n                headerFixedLayout: initialState.headerFixedLayout,\r\n                boxLayout: initialState.boxLayout,\r\n                navDropdownIcon: initialState.navDropdownIcon,\r\n                navListIcon: initialState.navListIcon,\r\n                navActiveListColor: initialState.navActiveListColor,\r\n                navListTitleColor: initialState.navListTitleColor,\r\n                navListTitleHide: initialState.navListTitleHide,\r\n                layout6Background : initialState.layout6Background\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}