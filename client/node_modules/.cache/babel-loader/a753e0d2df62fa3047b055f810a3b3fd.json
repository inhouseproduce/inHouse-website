{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Gradient = require(\"zrender/lib/graphic/Gradient\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function reset(seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function dataEach(data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","map":{"version":3,"sources":["/Users/eduardjacobs/Desktop/files/inHouse-website/client/node_modules/echarts/lib/visual/seriesColor.js"],"names":["Gradient","require","_default","createOnAllSeries","performRawSeries","reset","seriesModel","ecModel","data","getData","colorAccessPath","visualColorAccessPath","split","color","get","getColorFromPalette","name","getSeriesCount","setVisual","isSeriesFiltered","each","idx","setItemVisual","getDataParams","dataEach","itemModel","getItemModel","hasItemOption","module","exports"],"mappings":"AACA;;;;;;;;;;;;;;;;;;AAmBA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,8BAAD,CAAtB;AAEA;;;;;;;;;;;;;;;;;;;;AAkBA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,iBAAiB,EAAE,IADN;AAEbC,EAAAA,gBAAgB,EAAE,IAFL;AAGbC,EAAAA,KAAK,EAAE,eAAUC,WAAV,EAAuBC,OAAvB,EAAgC;AACrC,QAAIC,IAAI,GAAGF,WAAW,CAACG,OAAZ,EAAX;AACA,QAAIC,eAAe,GAAG,CAACJ,WAAW,CAACK,qBAAZ,IAAqC,iBAAtC,EAAyDC,KAAzD,CAA+D,GAA/D,CAAtB;AACA,QAAIC,KAAK,GAAGP,WAAW,CAACQ,GAAZ,CAAgBJ,eAAhB,EAAiC;AAAjC,OACTJ,WAAW,CAACS,mBAAZ,EAAiC;AACpCT,IAAAA,WAAW,CAACU,IADT,EACe,IADf,EACqBT,OAAO,CAACU,cAAR,EADrB,CADH,CAHqC,CAKc;AACnD;;AAEAT,IAAAA,IAAI,CAACU,SAAL,CAAe,OAAf,EAAwBL,KAAxB,EARqC,CAQL;;AAEhC,QAAI,CAACN,OAAO,CAACY,gBAAR,CAAyBb,WAAzB,CAAL,EAA4C;AAC1C,UAAI,OAAOO,KAAP,KAAiB,UAAjB,IAA+B,EAAEA,KAAK,YAAYb,QAAnB,CAAnC,EAAiE;AAC/DQ,QAAAA,IAAI,CAACY,IAAL,CAAU,UAAUC,GAAV,EAAe;AACvBb,UAAAA,IAAI,CAACc,aAAL,CAAmBD,GAAnB,EAAwB,OAAxB,EAAiCR,KAAK,CAACP,WAAW,CAACiB,aAAZ,CAA0BF,GAA1B,CAAD,CAAtC;AACD,SAFD;AAGD,OALyC,CAKxC;;;AAGF,UAAIG,QAAQ,GAAG,SAAXA,QAAW,CAAUhB,IAAV,EAAgBa,GAAhB,EAAqB;AAClC,YAAII,SAAS,GAAGjB,IAAI,CAACkB,YAAL,CAAkBL,GAAlB,CAAhB;AACA,YAAIR,KAAK,GAAGY,SAAS,CAACX,GAAV,CAAcJ,eAAd,EAA+B,IAA/B,CAAZ;;AAEA,YAAIG,KAAK,IAAI,IAAb,EAAmB;AACjBL,UAAAA,IAAI,CAACc,aAAL,CAAmBD,GAAnB,EAAwB,OAAxB,EAAiCR,KAAjC;AACD;AACF,OAPD;;AASA,aAAO;AACLW,QAAAA,QAAQ,EAAEhB,IAAI,CAACmB,aAAL,GAAqBH,QAArB,GAAgC;AADrC,OAAP;AAGD;AACF;AAlCY,CAAf;AAoCAI,MAAM,CAACC,OAAP,GAAiB3B,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}