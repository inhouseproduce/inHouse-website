{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\n\n\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function buildPath(ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function pointAt(t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function tangentAt(t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","map":{"version":3,"sources":["/Users/eduardjacobs/Desktop/files/inHouse-website/client/node_modules/echarts/lib/chart/helper/LinePath.js"],"names":["graphic","require","vec2","straightLineProto","Line","prototype","bezierCurveProto","BezierCurve","isLine","shape","isNaN","cpx1","cpy1","_default","extendShape","type","style","stroke","fill","x1","y1","x2","y2","percent","buildPath","ctx","pointAt","t","call","tangentAt","p","normalize","module","exports"],"mappings":"AACA;;;;;;;;;;;;;;;;;;AAmBA,IAAIA,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAArB;;AAEA,IAAIC,IAAI,GAAGD,OAAO,CAAC,yBAAD,CAAlB;AAEA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;AAGA,IAAIE,iBAAiB,GAAGH,OAAO,CAACI,IAAR,CAAaC,SAArC;AACA,IAAIC,gBAAgB,GAAGN,OAAO,CAACO,WAAR,CAAoBF,SAA3C;;AAEA,SAASG,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,SAAOC,KAAK,CAAC,CAACD,KAAK,CAACE,IAAR,CAAL,IAAsBD,KAAK,CAAC,CAACD,KAAK,CAACG,IAAR,CAAlC;AACD;;AAED,IAAIC,QAAQ,GAAGb,OAAO,CAACc,WAAR,CAAoB;AACjCC,EAAAA,IAAI,EAAE,SAD2B;AAEjCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,MADH;AAELC,IAAAA,IAAI,EAAE;AAFD,GAF0B;AAMjCT,EAAAA,KAAK,EAAE;AACLU,IAAAA,EAAE,EAAE,CADC;AAELC,IAAAA,EAAE,EAAE,CAFC;AAGLC,IAAAA,EAAE,EAAE,CAHC;AAILC,IAAAA,EAAE,EAAE,CAJC;AAKLC,IAAAA,OAAO,EAAE,CALJ;AAMLZ,IAAAA,IAAI,EAAE,IAND;AAOLC,IAAAA,IAAI,EAAE;AAPD,GAN0B;AAejCY,EAAAA,SAAS,EAAE,mBAAUC,GAAV,EAAehB,KAAf,EAAsB;AAC/B,KAACD,MAAM,CAACC,KAAD,CAAN,GAAgBN,iBAAhB,GAAoCG,gBAArC,EAAuDkB,SAAvD,CAAiEC,GAAjE,EAAsEhB,KAAtE;AACD,GAjBgC;AAkBjCiB,EAAAA,OAAO,EAAE,iBAAUC,CAAV,EAAa;AACpB,WAAOnB,MAAM,CAAC,KAAKC,KAAN,CAAN,GAAqBN,iBAAiB,CAACuB,OAAlB,CAA0BE,IAA1B,CAA+B,IAA/B,EAAqCD,CAArC,CAArB,GAA+DrB,gBAAgB,CAACoB,OAAjB,CAAyBE,IAAzB,CAA8B,IAA9B,EAAoCD,CAApC,CAAtE;AACD,GApBgC;AAqBjCE,EAAAA,SAAS,EAAE,mBAAUF,CAAV,EAAa;AACtB,QAAIlB,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIqB,CAAC,GAAGtB,MAAM,CAACC,KAAD,CAAN,GAAgB,CAACA,KAAK,CAACY,EAAN,GAAWZ,KAAK,CAACU,EAAlB,EAAsBV,KAAK,CAACa,EAAN,GAAWb,KAAK,CAACW,EAAvC,CAAhB,GAA6Dd,gBAAgB,CAACuB,SAAjB,CAA2BD,IAA3B,CAAgC,IAAhC,EAAsCD,CAAtC,CAArE;AACA,WAAOzB,IAAI,CAAC6B,SAAL,CAAeD,CAAf,EAAkBA,CAAlB,CAAP;AACD;AAzBgC,CAApB,CAAf;;AA4BAE,MAAM,CAACC,OAAP,GAAiBpB,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}