{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\n\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function getInitialData(option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n  setNodePosition: function setNodePosition(dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function getGraph() {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function getEdgeData() {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function formatTooltip(dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  optionUpdated: function optionUpdated() {\n    var option = this.option;\n\n    if (option.focusNodeAdjacency === true) {\n      option.focusNodeAdjacency = 'allEdges';\n    }\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // The position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // Value can be 'vertical'\n    orient: 'horizontal',\n    // The dx of the node\n    nodeWidth: 20,\n    // The vertical distance between two nodes\n    nodeGap: 8,\n    // Control if the node can move or not\n    draggable: true,\n    // Value can be 'inEdges', 'outEdges', 'allEdges', true (the same as 'allEdges').\n    focusNodeAdjacency: false,\n    // The number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","map":{"version":3,"sources":["/Users/eduardjacobs/Desktop/files/inHouse-website/client/node_modules/echarts/lib/chart/sankey/SankeySeries.js"],"names":["SeriesModel","require","createGraphFromNodeEdge","_format","encodeHTML","SankeySeries","extend","type","layoutInfo","getInitialData","option","links","edges","nodes","data","graph","setNodePosition","dataIndex","localPosition","dataItem","localX","localY","getGraph","getData","getEdgeData","edgeData","formatTooltip","multipleSeries","dataType","params","getDataParams","rawDataOpt","html","source","target","value","superCall","optionUpdated","focusNodeAdjacency","defaultOption","zlevel","z","coordinateSystem","layout","left","top","right","bottom","orient","nodeWidth","nodeGap","draggable","layoutIterations","label","show","position","color","fontSize","itemStyle","borderWidth","borderColor","lineStyle","opacity","curveness","emphasis","animationEasing","animationDuration","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n  setNodePosition: function (dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n\n    if (option.focusNodeAdjacency === true) {\n      option.focusNodeAdjacency = 'allEdges';\n    }\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // The position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // Value can be 'vertical'\n    orient: 'horizontal',\n    // The dx of the node\n    nodeWidth: 20,\n    // The vertical distance between two nodes\n    nodeGap: 8,\n    // Control if the node can move or not\n    draggable: true,\n    // Value can be 'inEdges', 'outEdges', 'allEdges', true (the same as 'allEdges').\n    focusNodeAdjacency: false,\n    // The number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}