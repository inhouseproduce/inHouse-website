{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function init(option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function mergeOption(option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function optionUpdated() {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function _updateData(ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function getData() {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function select(name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function unSelect(name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function toggleSelected(name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function isSelected(name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","map":{"version":3,"sources":["/Users/eduardjacobs/Desktop/files/inHouse-website/client/node_modules/echarts/lib/component/legend/LegendModel.js"],"names":["echarts","require","zrUtil","Model","_model","isNameSpecified","LegendModel","extendComponentModel","type","dependencies","layoutMode","ignoreSize","init","option","parentModel","ecModel","mergeDefaultAndTheme","selected","mergeOption","superCall","optionUpdated","_updateData","legendData","_data","get","hasSelected","i","length","name","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","seriesName","push","isPotential","legendDataProvider","data","names","mapArray","getName","isSeriesFiltered","concat","_availableNames","rawData","map","dataItem","getData","selectedMode","each","unSelect","toggleSelected","hasOwnProperty","indexOf","defaultOption","zlevel","z","show","orient","left","top","align","backgroundColor","borderColor","borderRadius","borderWidth","padding","itemGap","itemWidth","itemHeight","inactiveColor","textStyle","color","tooltip","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}