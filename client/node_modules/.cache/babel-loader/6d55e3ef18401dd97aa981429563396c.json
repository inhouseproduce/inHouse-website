{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\n\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function init() {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function render(seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function dispose() {},\n  highlight: function highlight(seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function downplay(seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function _newPolyline(points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function _newPolygon(points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function _updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function remove(ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","map":{"version":3,"sources":["/Users/eduardjacobs/Desktop/files/inHouse-website/client/node_modules/echarts/lib/chart/line/LineView.js"],"names":["_config","require","__DEV__","zrUtil","SymbolDraw","SymbolClz","lineAnimationDiff","graphic","modelUtil","_poly","Polyline","Polygon","ChartView","_number","round","_helper","prepareDataCoordInfo","getStackedOnPoint","isPointsSame","points1","points2","length","i","p1","p2","getSmooth","smooth","getAxisExtentWithGap","axis","extent","getGlobalExtent","onBand","halfBandWidth","getBandWidth","dir","getStackedOnPoints","coordSys","data","dataCoordInfo","valueDim","points","idx","len","count","push","createGridClipShape","cartesian","hasAnimation","forSymbol","seriesModel","xExtent","getAxis","yExtent","isHorizontal","getBaseAxis","x","Math","min","y","width","max","height","lineWidth","get","expandSize","clipPath","Rect","shape","initProps","createPolarClipShape","polar","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","getExtent","slice","reverse","angleExtent","RADIAN","PI","Sector","cx","cy","r0","r","startAngle","endAngle","clockwise","inverse","createClipShape","type","turnPointsIntoStep","stepTurnAt","baseAxis","baseIndex","dim","stepPoints","nextPt","pt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","getVisual","coordDim","visualMeta","dimIndex","dimension","dimName","dimensions","dimInfo","getDimensionInfo","colorStops","map","stops","stop","coord","toGlobalCoord","dataToCoord","value","color","stopLen","outerColors","tinyExtent","minCoord","maxCoord","coordSpan","each","offset","unshift","gradient","LinearGradient","getIsIgnoreFunc","showAllSymbol","isAuto","categoryAxis","getAxesByScale","canShowAllSymbolForCategory","categoryDataDim","mapDimension","labelMap","getViewLabels","labelItem","tickValue","dataIndex","hasOwnProperty","axisExtent","availSize","abs","scale","isNaN","dataLen","step","getSymbolSize","_default","extend","init","lineGroup","Group","symbolDraw","group","add","_symbolDraw","_lineGroup","render","ecModel","api","coordinateSystem","getData","lineStyleModel","getModel","areaStyleModel","mapArray","getItemLayout","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","isEmpty","valueOrigin","stackedOnPoints","showSymbol","isIgnoreFunc","oldData","_data","eachItemGraphicEl","el","__temp","remove","setItemGraphicEl","_step","updateData","isIgnore","clipShape","_newPolyline","_newPolygon","setClipPath","stopAnimation","_stackedOnPoints","_points","_updateAnimation","setShape","visualColor","useStyle","defaults","getLineStyle","fill","stroke","lineJoin","smoothMonotone","connectNulls","stackedOnSeries","getCalculationInfo","stackedOnSmooth","getAreaStyle","opacity","_valueOrigin","dispose","highlight","payload","queryDataIndex","Array","symbol","getItemGraphicEl","position","setZ","ignore","stopSymbolAnimation","prototype","call","downplay","silent","z2","hostModel","diff","current","stackedOnCurrent","next","stackedOnNext","__points","updateProps","updatedDataInfo","diffStatus","status","cmd","idx1","ptIdx","animators","during","attr","removeAll","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}