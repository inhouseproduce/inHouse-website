{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function init() {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function render(seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    } else {\n      // clipPath is used in first-time animation, so remove it when otherwise. See: #8994\n      group.removeClipPath();\n    }\n\n    this._data = data;\n  },\n  dispose: function dispose() {},\n  _createClipPath: function _createClipPath(cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function containPoint(point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","map":{"version":3,"sources":["/Users/eduardjacobs/Desktop/files/inHouse-website/client/node_modules/echarts/lib/chart/pie/PieView.js"],"names":["zrUtil","require","graphic","ChartView","updateDataSelected","uid","seriesModel","hasAnimation","api","data","getData","dataIndex","name","getName","selectedOffset","get","dispatchAction","type","from","seriesId","id","each","idx","toggleItemSelected","getItemGraphicEl","getItemLayout","isSelected","el","layout","midAngle","startAngle","endAngle","dx","Math","cos","dy","sin","offset","position","animate","when","start","attr","PiePiece","Group","call","sector","Sector","z2","polyline","Polyline","text","Text","add","updateData","onEmphasis","ignore","hoverIgnore","onNormal","normalIgnore","on","piePieceProto","prototype","firstCreate","childAt","hostModel","itemModel","getItemModel","sectorShape","extend","label","setShape","animationType","getShallow","shape","r","r0","initProps","updateProps","visualColor","getItemVisual","useStyle","defaults","lineJoin","fill","getModel","getItemStyle","hoverStyle","cursorStyle","stopAnimation","animateTo","off","isAnimationEnabled","_updateLabel","setHoverStyle","labelLine","labelText","labelLayout","points","linePoints","x","y","style","rotation","origin","labelModel","labelHoverModel","labelLineModel","labelLineHoverModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","autoColor","useInsideStyle","inside","textAlign","textVerticalAlign","verticalAlign","opacity","setStyle","stroke","getLineStyle","smooth","inherits","PieView","init","sectorGroup","_sectorGroup","render","ecModel","payload","oldData","_data","group","isFirstRender","onSectorClick","curry","selectedMode","diff","piePiece","eachChild","child","setItemGraphicEl","update","newIdx","oldIdx","remove","execute","count","max","getWidth","getHeight","removeClipPath","bind","setClipPath","_createClipPath","cx","cy","clockwise","dispose","cb","clipPath","PI","containPoint","point","itemLayout","radius","sqrt","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    } else {\n      // clipPath is used in first-time animation, so remove it when otherwise. See: #8994\n      group.removeClipPath();\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}