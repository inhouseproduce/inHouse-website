{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function updateTransform(markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function renderSeries(seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/Users/eduardjacobs/Desktop/files/inHouse-website/client/node_modules/echarts/lib/component/marker/MarkPointView.js"],"names":["zrUtil","require","SymbolDraw","numberUtil","List","markerHelper","MarkerView","updateMarkerLayout","mpData","seriesModel","api","coordSys","coordinateSystem","each","idx","itemModel","getItemModel","point","xPx","parsePercent","get","getWidth","yPx","getHeight","isNaN","getMarkerPosition","getValues","dimensions","x","y","dataToPoint","setItemLayout","_default","extend","type","updateTransform","markPointModel","ecModel","eachSeries","mpModel","getData","markerGroupMap","id","updateLayout","renderSeries","seriesId","seriesData","symbolDrawMap","symbolDraw","set","createList","setData","symbolSize","getShallow","getRawValue","getDataParams","setItemVisual","color","getVisual","symbol","updateData","group","add","eachItemGraphicEl","el","traverse","child","dataModel","__keep","silent","coordDimsInfos","map","coordDim","info","getDimensionInfo","mapDimension","defaults","name","dataOpt","curry","dataTransform","filter","dataFilter","initData","dimValueGetter","item","value","module","exports"],"mappings":"AACA;;;;;;;;;;;;;;;;;;AAmBA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,+BAAD,CAAxB;;AAEA,IAAIE,UAAU,GAAGF,OAAO,CAAC,mBAAD,CAAxB;;AAEA,IAAIG,IAAI,GAAGH,OAAO,CAAC,iBAAD,CAAlB;;AAEA,IAAII,YAAY,GAAGJ,OAAO,CAAC,gBAAD,CAA1B;;AAEA,IAAIK,UAAU,GAAGL,OAAO,CAAC,cAAD,CAAxB;AAEA;;;;;;;;;;;;;;;;;;;;AAkBA,SAASM,kBAAT,CAA4BC,MAA5B,EAAoCC,WAApC,EAAiDC,GAAjD,EAAsD;AACpD,MAAIC,QAAQ,GAAGF,WAAW,CAACG,gBAA3B;AACAJ,EAAAA,MAAM,CAACK,IAAP,CAAY,UAAUC,GAAV,EAAe;AACzB,QAAIC,SAAS,GAAGP,MAAM,CAACQ,YAAP,CAAoBF,GAApB,CAAhB;AACA,QAAIG,KAAJ;AACA,QAAIC,GAAG,GAAGf,UAAU,CAACgB,YAAX,CAAwBJ,SAAS,CAACK,GAAV,CAAc,GAAd,CAAxB,EAA4CV,GAAG,CAACW,QAAJ,EAA5C,CAAV;AACA,QAAIC,GAAG,GAAGnB,UAAU,CAACgB,YAAX,CAAwBJ,SAAS,CAACK,GAAV,CAAc,GAAd,CAAxB,EAA4CV,GAAG,CAACa,SAAJ,EAA5C,CAAV;;AAEA,QAAI,CAACC,KAAK,CAACN,GAAD,CAAN,IAAe,CAACM,KAAK,CAACF,GAAD,CAAzB,EAAgC;AAC9BL,MAAAA,KAAK,GAAG,CAACC,GAAD,EAAMI,GAAN,CAAR;AACD,KAFD,CAEE;AAFF,SAGK,IAAIb,WAAW,CAACgB,iBAAhB,EAAmC;AACpC;AACAR,QAAAA,KAAK,GAAGR,WAAW,CAACgB,iBAAZ,CAA8BjB,MAAM,CAACkB,SAAP,CAAiBlB,MAAM,CAACmB,UAAxB,EAAoCb,GAApC,CAA9B,CAAR;AACD,OAHE,MAGI,IAAIH,QAAJ,EAAc;AACnB,YAAIiB,CAAC,GAAGpB,MAAM,CAACY,GAAP,CAAWT,QAAQ,CAACgB,UAAT,CAAoB,CAApB,CAAX,EAAmCb,GAAnC,CAAR;AACA,YAAIe,CAAC,GAAGrB,MAAM,CAACY,GAAP,CAAWT,QAAQ,CAACgB,UAAT,CAAoB,CAApB,CAAX,EAAmCb,GAAnC,CAAR;AACAG,QAAAA,KAAK,GAAGN,QAAQ,CAACmB,WAAT,CAAqB,CAACF,CAAD,EAAIC,CAAJ,CAArB,CAAR;AACD,OAhBsB,CAgBrB;;;AAGJ,QAAI,CAACL,KAAK,CAACN,GAAD,CAAV,EAAiB;AACfD,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAWC,GAAX;AACD;;AAED,QAAI,CAACM,KAAK,CAACF,GAAD,CAAV,EAAiB;AACfL,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAWK,GAAX;AACD;;AAEDd,IAAAA,MAAM,CAACuB,aAAP,CAAqBjB,GAArB,EAA0BG,KAA1B;AACD,GA5BD;AA6BD;;AAED,IAAIe,QAAQ,GAAG1B,UAAU,CAAC2B,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE,WADyB;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,eAAe,EAAE,yBAAUC,cAAV,EAA0BC,OAA1B,EAAmC3B,GAAnC,EAAwC;AACvD2B,IAAAA,OAAO,CAACC,UAAR,CAAmB,UAAU7B,WAAV,EAAuB;AACxC,UAAI8B,OAAO,GAAG9B,WAAW,CAAC2B,cAA1B;;AAEA,UAAIG,OAAJ,EAAa;AACXhC,QAAAA,kBAAkB,CAACgC,OAAO,CAACC,OAAR,EAAD,EAAoB/B,WAApB,EAAiCC,GAAjC,CAAlB;AACA,aAAK+B,cAAL,CAAoBrB,GAApB,CAAwBX,WAAW,CAACiC,EAApC,EAAwCC,YAAxC,CAAqDJ,OAArD;AACD;AACF,KAPD,EAOG,IAPH;AAQD,GApB8B;AAqB/BK,EAAAA,YAAY,EAAE,sBAAUnC,WAAV,EAAuB8B,OAAvB,EAAgCF,OAAhC,EAAyC3B,GAAzC,EAA8C;AAC1D,QAAIC,QAAQ,GAAGF,WAAW,CAACG,gBAA3B;AACA,QAAIiC,QAAQ,GAAGpC,WAAW,CAACiC,EAA3B;AACA,QAAII,UAAU,GAAGrC,WAAW,CAAC+B,OAAZ,EAAjB;AACA,QAAIO,aAAa,GAAG,KAAKN,cAAzB;AACA,QAAIO,UAAU,GAAGD,aAAa,CAAC3B,GAAd,CAAkByB,QAAlB,KAA+BE,aAAa,CAACE,GAAd,CAAkBJ,QAAlB,EAA4B,IAAI3C,UAAJ,EAA5B,CAAhD;AACA,QAAIM,MAAM,GAAG0C,UAAU,CAACvC,QAAD,EAAWF,WAAX,EAAwB8B,OAAxB,CAAvB,CAN0D,CAMD;;AAEzDA,IAAAA,OAAO,CAACY,OAAR,CAAgB3C,MAAhB;AACAD,IAAAA,kBAAkB,CAACgC,OAAO,CAACC,OAAR,EAAD,EAAoB/B,WAApB,EAAiCC,GAAjC,CAAlB;AACAF,IAAAA,MAAM,CAACK,IAAP,CAAY,UAAUC,GAAV,EAAe;AACzB,UAAIC,SAAS,GAAGP,MAAM,CAACQ,YAAP,CAAoBF,GAApB,CAAhB;AACA,UAAIsC,UAAU,GAAGrC,SAAS,CAACsC,UAAV,CAAqB,YAArB,CAAjB;;AAEA,UAAI,OAAOD,UAAP,KAAsB,UAA1B,EAAsC;AACpC;AACAA,QAAAA,UAAU,GAAGA,UAAU,CAACb,OAAO,CAACe,WAAR,CAAoBxC,GAApB,CAAD,EAA2ByB,OAAO,CAACgB,aAAR,CAAsBzC,GAAtB,CAA3B,CAAvB;AACD;;AAEDN,MAAAA,MAAM,CAACgD,aAAP,CAAqB1C,GAArB,EAA0B;AACxBsC,QAAAA,UAAU,EAAEA,UADY;AAExBK,QAAAA,KAAK,EAAE1C,SAAS,CAACK,GAAV,CAAc,iBAAd,KAAoC0B,UAAU,CAACY,SAAX,CAAqB,OAArB,CAFnB;AAGxBC,QAAAA,MAAM,EAAE5C,SAAS,CAACsC,UAAV,CAAqB,QAArB;AAHgB,OAA1B;AAKD,KAdD,EAV0D,CAwBtD;;AAEJL,IAAAA,UAAU,CAACY,UAAX,CAAsBpD,MAAtB;AACA,SAAKqD,KAAL,CAAWC,GAAX,CAAed,UAAU,CAACa,KAA1B,EA3B0D,CA2BxB;AAClC;;AAEArD,IAAAA,MAAM,CAACuD,iBAAP,CAAyB,UAAUC,EAAV,EAAc;AACrCA,MAAAA,EAAE,CAACC,QAAH,CAAY,UAAUC,KAAV,EAAiB;AAC3BA,QAAAA,KAAK,CAACC,SAAN,GAAkB5B,OAAlB;AACD,OAFD;AAGD,KAJD;AAKAS,IAAAA,UAAU,CAACoB,MAAX,GAAoB,IAApB;AACApB,IAAAA,UAAU,CAACa,KAAX,CAAiBQ,MAAjB,GAA0B9B,OAAO,CAACnB,GAAR,CAAY,QAAZ,KAAyBX,WAAW,CAACW,GAAZ,CAAgB,QAAhB,CAAnD;AACD;AA1D8B,CAAlB,CAAf;AA4DA;;;;;;;;AAQA,SAAS8B,UAAT,CAAoBvC,QAApB,EAA8BF,WAA9B,EAA2C8B,OAA3C,EAAoD;AAClD,MAAI+B,cAAJ;;AAEA,MAAI3D,QAAJ,EAAc;AACZ2D,IAAAA,cAAc,GAAGtE,MAAM,CAACuE,GAAP,CAAW5D,QAAQ,IAAIA,QAAQ,CAACgB,UAAhC,EAA4C,UAAU6C,QAAV,EAAoB;AAC/E,UAAIC,IAAI,GAAGhE,WAAW,CAAC+B,OAAZ,GAAsBkC,gBAAtB,CAAuCjE,WAAW,CAAC+B,OAAZ,GAAsBmC,YAAtB,CAAmCH,QAAnC,CAAvC,KAAwF,EAAnG,CAD+E,CACwB;;AAEvG,aAAOxE,MAAM,CAAC4E,QAAP,CAAgB;AACrBC,QAAAA,IAAI,EAAEL;AADe,OAAhB,EAEJC,IAFI,CAAP;AAGD,KANgB,CAAjB;AAOD,GARD,MAQO;AACLH,IAAAA,cAAc,GAAG,CAAC;AAChBO,MAAAA,IAAI,EAAE,OADU;AAEhB3C,MAAAA,IAAI,EAAE;AAFU,KAAD,CAAjB;AAID;;AAED,MAAI1B,MAAM,GAAG,IAAIJ,IAAJ,CAASkE,cAAT,EAAyB/B,OAAzB,CAAb;AACA,MAAIuC,OAAO,GAAG9E,MAAM,CAACuE,GAAP,CAAWhC,OAAO,CAACnB,GAAR,CAAY,MAAZ,CAAX,EAAgCpB,MAAM,CAAC+E,KAAP,CAAa1E,YAAY,CAAC2E,aAA1B,EAAyCvE,WAAzC,CAAhC,CAAd;;AAEA,MAAIE,QAAJ,EAAc;AACZmE,IAAAA,OAAO,GAAG9E,MAAM,CAACiF,MAAP,CAAcH,OAAd,EAAuB9E,MAAM,CAAC+E,KAAP,CAAa1E,YAAY,CAAC6E,UAA1B,EAAsCvE,QAAtC,CAAvB,CAAV;AACD;;AAEDH,EAAAA,MAAM,CAAC2E,QAAP,CAAgBL,OAAhB,EAAyB,IAAzB,EAA+BnE,QAAQ,GAAGN,YAAY,CAAC+E,cAAhB,GAAiC,UAAUC,IAAV,EAAgB;AACtF,WAAOA,IAAI,CAACC,KAAZ;AACD,GAFD;AAGA,SAAO9E,MAAP;AACD;;AAED+E,MAAM,CAACC,OAAP,GAAiBxD,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}