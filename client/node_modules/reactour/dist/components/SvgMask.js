"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SvgMask;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var hx = _interopRequireWildcard(require("../helpers"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  opacity: 0.7;\n  width: 100%;\n  left: 0;\n  top: 0;\n  height: 100%;\n  position: fixed;\n  z-index: 99999;\n  pointer-events: none;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var SvgMaskWrapper = _styledComponents.default.div(_templateObject());

function SvgMask(_ref) {
  var windowWidth = _ref.windowWidth,
      windowHeight = _ref.windowHeight,
      targetWidth = _ref.targetWidth,
      targetHeight = _ref.targetHeight,
      targetTop = _ref.targetTop,
      targetLeft = _ref.targetLeft,
      padding = _ref.padding,
      rounded = _ref.rounded,
      disableInteraction = _ref.disableInteraction,
      disableInteractionClassName = _ref.disableInteractionClassName,
      className = _ref.className;
  var width = hx.safe(targetWidth + padding * 2);
  var height = hx.safe(targetHeight + padding * 2);
  var top = hx.safe(targetTop - padding);
  var left = hx.safe(targetLeft - padding);
  return _react.default.createElement(SvgMaskWrapper, null, _react.default.createElement("svg", {
    width: windowWidth,
    height: windowHeight,
    xmlns: "http://www.w3.org/2000/svg",
    className: className
  }, _react.default.createElement("defs", null, _react.default.createElement("mask", {
    id: "mask-main"
  }, _react.default.createElement("rect", {
    x: 0,
    y: 0,
    width: windowWidth,
    height: windowHeight,
    fill: "white"
  }), _react.default.createElement("rect", {
    x: left,
    y: top,
    width: width,
    height: height,
    fill: "black"
  }), _react.default.createElement("rect", {
    x: left - 1,
    y: top - 1,
    width: rounded,
    height: rounded,
    fill: "white"
  }), _react.default.createElement("circle", {
    cx: left + rounded,
    cy: top + rounded,
    r: rounded,
    fill: "black"
  }), _react.default.createElement("rect", {
    x: left + width - rounded + 1,
    y: top - 1,
    width: rounded,
    height: rounded,
    fill: "white"
  }), _react.default.createElement("circle", {
    cx: left + width - rounded,
    cy: top + rounded,
    r: rounded,
    fill: "black"
  }), _react.default.createElement("rect", {
    x: left - 1,
    y: top + height - rounded + 1,
    width: rounded,
    height: rounded,
    fill: "white"
  }), _react.default.createElement("circle", {
    cx: left + rounded,
    cy: top + height - rounded,
    r: rounded,
    fill: "black"
  }), _react.default.createElement("rect", {
    x: left + width - rounded + 1,
    y: top + height - rounded + 1,
    width: rounded,
    height: rounded,
    fill: "white"
  }), _react.default.createElement("circle", {
    cx: left + width - rounded,
    cy: top + height - rounded,
    r: rounded,
    fill: "black "
  })), _react.default.createElement("clipPath", {
    id: "clip-path"
  }, _react.default.createElement("rect", {
    x: 0,
    y: 0,
    width: windowWidth,
    height: top
  }), _react.default.createElement("rect", {
    x: 0,
    y: top,
    width: left,
    height: height
  }), _react.default.createElement("rect", {
    x: targetLeft + targetWidth + padding,
    y: top,
    width: hx.safe(windowWidth - targetWidth - left),
    height: height
  }), _react.default.createElement("rect", {
    x: 0,
    y: targetTop + targetHeight + padding,
    width: windowWidth,
    height: hx.safe(windowHeight - targetHeight - top)
  }))), _react.default.createElement("rect", {
    x: 0,
    y: 0,
    width: windowWidth,
    height: windowHeight,
    fill: "#000000",
    mask: "url(#mask-main)"
  }), _react.default.createElement("rect", {
    x: 0,
    y: 0,
    width: windowWidth,
    height: windowHeight,
    fill: "#000000",
    clipPath: "url(#clip-path)",
    pointerEvents: "auto"
  }), _react.default.createElement("rect", {
    x: left,
    y: top,
    width: width,
    height: height,
    pointerEvents: "auto",
    fill: "transparent",
    display: disableInteraction ? 'block' : 'none',
    className: disableInteractionClassName
  })));
}

SvgMask.propTypes = {
  windowWidth: _propTypes.default.number.isRequired,
  windowHeight: _propTypes.default.number.isRequired,
  targetWidth: _propTypes.default.number.isRequired,
  targetHeight: _propTypes.default.number.isRequired,
  targetTop: _propTypes.default.number.isRequired,
  targetLeft: _propTypes.default.number.isRequired,
  padding: _propTypes.default.number.isRequired,
  rounded: _propTypes.default.number.isRequired,
  disableInteraction: _propTypes.default.bool.isRequired,
  disableInteractionClassName: _propTypes.default.string.isRequired
};