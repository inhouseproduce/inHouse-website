"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bestPositionOf = exports.safe = exports.isOutsideY = exports.isOutsideX = exports.isHoriz = exports.isBody = exports.inView = exports.getNodeRect = void 0;

var _lodash = _interopRequireDefault(require("lodash.pick"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getNodeRect = function getNodeRect(node) {
  return (0, _lodash.default)(node.getBoundingClientRect(), ['top', 'right', 'bottom', 'left', 'width', 'height']);
};

exports.getNodeRect = getNodeRect;

var inView = function inView(_ref) {
  var top = _ref.top,
      right = _ref.right,
      bottom = _ref.bottom,
      left = _ref.left,
      w = _ref.w,
      h = _ref.h,
      _ref$threshold = _ref.threshold,
      threshold = _ref$threshold === void 0 ? 0 : _ref$threshold;
  return top >= 0 + threshold && left >= 0 + threshold && bottom <= h - threshold && right <= w - threshold;
};

exports.inView = inView;

var isBody = function isBody(node) {
  return node === document.querySelector('body') || node === document.querySelector('html');
};

exports.isBody = isBody;

var isHoriz = function isHoriz(pos) {
  return /(left|right)/.test(pos);
};

exports.isHoriz = isHoriz;

var isOutsideX = function isOutsideX(val, windowWidth) {
  return val > windowWidth;
};

exports.isOutsideX = isOutsideX;

var isOutsideY = function isOutsideY(val, windowHeight) {
  return val > windowHeight;
};

exports.isOutsideY = isOutsideY;

var safe = function safe(sum) {
  return sum < 0 ? 0 : sum;
};

exports.safe = safe;

var bestPositionOf = function bestPositionOf(positions) {
  return Object.keys(positions).map(function (p) {
    return {
      position: p,
      value: positions[p]
    };
  }).sort(function (a, b) {
    return b.value - a.value;
  }).map(function (p) {
    return p.position;
  });
};

exports.bestPositionOf = bestPositionOf;